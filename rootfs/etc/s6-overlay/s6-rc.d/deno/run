#!/usr/bin/with-contenv sh
if [ ! -z "$TASK" ]; then
  exec s6-setuidgid tundra deno task --no-prompt $TASK
elif [ ! -z "$FILE" ]; then
  RUN_ARGS=
  # Lets check if we have permissions
  if [ ! -z $ALLOW_ALL ]; then
    RUN_ARGS="--allow-all"
  else
    if [ ! -z $ALLOW_HRTIME ]; then
      RUN_ARGS="${RUN_ARGS} --allow-hrtime"
    fi
    if [ ! -z $ALLOW_SYS ]; then
      # if value is 1 then its all, if its 0 then no, else its a list of permissions to allow
      if [ $ALLOW_SYS -eq 1 ]; then
        RUN_ARGS="${RUN_ARGS} --allow-sys"
      elif [ $ALLOW_SYS -ne 0 ]; then
        RUN_ARGS="${RUN_ARGS} --allow-sys=${ALLOW_SYS}"
      fi
    fi
    if [ ! -z $ALLOW_ENV ]; then
      if [ $ALLOW_ENV -eq 1 ]; then
        RUN_ARGS="${RUN_ARGS} --allow-env"
      elif [ $ALLOW_ENV -ne 0 ]; then
        RUN_ARGS="${RUN_ARGS} --allow-env=${ALLOW_ENV}"
      fi
    fi
    if [ ! -z $ALLOW_NET ]; then
      if [ $ALLOW_NET -eq 1 ]; then
        RUN_ARGS="${RUN_ARGS} --allow-net"
      elif [ $ALLOW_NET -ne 0 ]; then
        RUN_ARGS="${RUN_ARGS} --allow-net=${ALLOW_NET}"
      fi
    fi
    if [ ! -z $ALLOW_FFI ]; then
      if [ $ALLOW_FFI -eq 1 ]; then
        RUN_ARGS="${RUN_ARGS} --allow-ffi"
      elif [ $ALLOW_FFI -ne 0 ]; then
        RUN_ARGS="${RUN_ARGS} --allow-ffi=${ALLOW_FFI}"
      fi
    fi
    if [ ! -z $ALLOW_RUN ]; then
      if [ $ALLOW_RUN -eq 1 ]; then
        RUN_ARGS="${RUN_ARGS} --allow-run"
      elif [ $ALLOW_RUN -ne 0 ]; then
        RUN_ARGS="${RUN_ARGS} --allow-run=${ALLOW_RUN}"
      fi
    fi
    if [ ! -z $ALLOW_READ ]; then
      if [ $ALLOW_READ -eq 1 ]; then
        RUN_ARGS="${RUN_ARGS} --allow-read"
      elif [ $ALLOW_READ -ne 0 ]; then
        RUN_ARGS="${RUN_ARGS} --allow-read=${ALLOW_READ}"
      fi
    fi
    if [ ! -z $ALLOW_WRITE ]; then
      if [ $ALLOW_WRITE -eq 1 ]; then
        RUN_ARGS="${RUN_ARGS} --allow-write"
      elif [ $ALLOW_WRITE -ne 0 ]; then
        RUN_ARGS="${RUN_ARGS} --allow-write=${ALLOW_WRITE}"
      fi
    fi
    if [ ! -z $UNSTABLE ]; then
      if [ $UNSTABLE -eq 1 ]; then
        # Throw warning that we are using unstable
        echo "Warning: Using unstable features"
        RUN_ARGS="${RUN_ARGS} --unstable"
      elif [ $UNSTABLE -ne 0 ]; then
        IFS=',' echo "$UNSTABLE" | while read -ra ADDR; do
          for val in "${ADDR[@]}"; do
            RUN_ARGS="${RUN_ARGS} --unstable-${val}"
          done
        done
      fi
    fi
  fi
  exec s6-setuidgid tundra deno run --no-prompt $RUN_ARGS $FILE
else 
  # No args passed so we run a dummy app
  cat << EOF > /app/app.ts
export {}
console.log('Welcome to Deno ðŸ¦•')
while (true) {
  await new Promise((resolve) => setTimeout(resolve, 1000))
}
EOF
  exec s6-setuidgid tundra deno run --no-prompt /app/app.ts
fi